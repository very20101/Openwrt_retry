#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build OpenWrt-Nova

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      url:
        description: 'OpenWrt Repository URL'
        required: true
        default: 'https://github.com/openwrt/openwrt'
      branch:
        description: 'OpenWrt Repository Branch'
        required: true
        default: 'master'
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: ${{github.event.inputs.url}}
  REPO_BRANCH: ${{github.event.inputs.branch}}
  FEEDS_CONF: feedsopenwrt.conf.default
  CONFIG_FILE: .configopwrt0806
  DIY_P1_SH: diy-part01new.sh
  DIY_P2_SH: diy-part02new.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  FILE_NAME: openWrt_armvirt
  PRODUCT_NAME: openWrt_armvirt
  
jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@main
      
    - name: 检查服务器配置
      run: |
        echo "警告⚠"
        echo "若分配的服务器性能不足，务必及时取消，重新运行！"
        echo "已知编译成功CPU型号：8370C,8171M"
        echo "已知性能不足CPU型号：8272CL,E5系列"
        echo "--------------------------CPU信息--------------------------"
        echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
        echo -e "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "--------------------------内存信息--------------------------"
        echo "已安装内存详细信息："
        sudo lshw -short -C memory | grep GiB
        echo -e "\n"
        echo "--------------------------硬盘信息--------------------------"
        echo -e  "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l) \n"
        echo "硬盘详情："
        df -Th
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        
        sudo -E apt-get -qq update
        sudo -E apt-get -qq upgrade -y
        
        #sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /etc/mysql /etc/php /usr/local/lib/android /opt/ghc
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
        sudo systemctl stop mysql
        sudo apt-get purge mysql-server mysql-client mysql-common mysql-server-core-* mysql-client-core-*
        sudo rm -rf /etc/mysql /var/lib/mysql /var/log/mysql
        sudo apt-get remove --purge mysql-\* 
        sudo apt-get autoremove
        sudo apt-get autoclean
        sudo apt-get install mysql-server mysql-client
        sudo systemctl daemon-reload
        
        sudo -E apt-get -qq update
        sudo -E apt-get -qq upgrade -y
        sudo -E apt-get -qq install -y $(curl -fsSL https://raw.githubusercontent.com/very20101/Openwrt_retry/main/ubutun2204-update)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown ${USER}:${GROUPS} /workdir
        echo "status=success" >> ${GITHUB_OUTPUT}
        df -Th
        
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT ${PWD}
        git clone ${REPO_URL} -b ${REPO_BRANCH} openwrt
        ln -sf /workdir/openwrt ${GITHUB_WORKSPACE}/openwrt
        
    - name: toolchain cache
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: 'true'
        prefix: ${{ github.workspace }}/openwrt
        
    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        #make distclean
        ${GITHUB_WORKSPACE}/$DIY_P1_SH
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        ${GITHUB_WORKSPACE}/$DIY_P2_SH
        
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Compile the firmware
      id: compile
      run: |
      
        cd openwrt
        #rm -rf package/kernel/linux/modules/fs.mk
        #wget -O package/kernel/linux/modules/fs.mk https://raw.githubusercontent.com/very20101/Openwrt_retry/main/fs.mk
        #rm -rf package/kernel/linux/modules/crypto.mk
        #wget -O package/kernel/linux/modules/crypto.mk https://raw.githubusercontent.com/very20101/Openwrt_N1_try/main/crypto.mk
        #rm -rf feeds/packages/libs/libmariadb/Makefile
        #wget -O feeds/packages/libs/libmariadb/Makefile https://raw.githubusercontent.com/very20101/Openwrt_retry/main/Makefile
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> ${GITHUB_OUTPUT}
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> ${GITHUB_OUTPUT}
    
    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cd $GITHUB_WORKSPACE/openwrt/bin/packages
        tar -zcvf Packages.tar.gz ./*
        cp Packages.tar.gz $GITHUB_WORKSPACE/openwrt/bin/targets/*/*
        cd $GITHUB_WORKSPACE/openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> ${GITHUB_OUTPUT}
        
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: env.UPLOAD_FIRMWARE == 'true' && steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Upload OpenWrt Firmware to Release
      id: release
      uses: ncipollo/release-action@v1
      with:
        name: R${{ env.DATE }} for ${{ env.PRODUCT_NAME }}
        allowUpdates: true
        tag: ${{ env.FILE_NAME }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          - OpenWrt Master 官方源底包，非完整固件
          ${{ env.useVersionInfo }}
        artifacts: openwrt/bin/targets/*/*/*rootfs.tar.gz
        
    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> ${GITHUB_OUTPUT}
        touch release.txt
        echo "status=success" >> ${GITHUB_OUTPUT}
        
    - name: Clean up server space
      if: ${{ steps.compile.outputs.status }} == 'success' && !cancelled()
      run: |
          cd openwrt/
          rm -rf $(ls . | grep -v "^bin$" | xargs) 2>/dev/null
          df -hT ${PWD}
        
    - name: Package Armvirt as OpenWrt
      uses: unifreq/openwrt_packit@master
      env:
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
        PACKAGE_SOC: s905d
        KERNEL_VERSION_NAME: 5.15.60
        
    - name: Upload Firmware to Release
      uses: ncipollo/release-action@main
      with:
        tag: openwrt_armvirt_v8_${{ env.PACKAGED_OUTPUTDATE }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
         This is OpenWrt firmware for Armvirt 64 
          * Firmware information
          自用精简固件，常用插件较少
          Default IP: 192.168.1.100
          Default username: root
          Default password: password
          
    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 30
        keep_minimum_runs: 6

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 8
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
